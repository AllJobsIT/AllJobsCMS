version: "3"
services:
  db:
    build:
      context: ./
      dockerfile: ./deploy/docker/Dockerfile.dbdev
    volumes:
      - all_jobs_pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
  #    healthcheck:
  #      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  #      interval: 5s
  #      timeout: 5s
  #      retries: 5
  dev:
    build:
      context: ./
      dockerfile: ./deploy/docker/Dockerfile.dev
    command:
      - /bin/sh
      - -c
      - |
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    stdin_open: true
    tty: true
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - devjs
  devjs:
    build:
      context: ./
      dockerfile: ./deploy/docker/Dockerfile.devjs
    command: npm run watch
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - npm_config_cache=/app/.npm
volumes:
  all_jobs_pg_data:
